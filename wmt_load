#!/usr/bin/env bash
#
# Loads the wmt-client application on diluvium.
#
# Arguments:
#   -t loads the module to wmt-testing (optional)
#   -a loads the module to wmt-analyst (optional)
#   -d loads the module to wmt-dakota (optional)
#   -f loads the module to wmt-topoflow (optional)
#   -p loads the module to wmt-permafrost (optional)
#   -s loads the module to wmt-staging (optional)
#   -h shows the help message
#
# Usage:
#   $ wmt_load
#   $ wmt_load -t
#   $ wmt_load -a
#   $ wmt_load -d
#   $ wmt_load -f
#   $ wmt_load -p
#   $ wmt_load -s

# Help text.
help="Usage: wmt_load [-t] [-a] [-d] [-f] [-p] [-s] [-h]"

# Read parameters, parse into variables.
testing="false"
while getopts ":tadfpsh" opt; do
  case $opt in
  t)
      testing="true"
      ;;
  a)
      analyst="true"
      ;;
  d)
      dakota="true"
      ;;
  f)
      topoflow="true"
      ;;
  p)
      permafrost="true"
      ;;
  s)
      staging="true"
      ;;
  h)
      echo -e $help
      exit 0
      ;;
  \?)
      # Catches invalid flag.
      echo "Invalid option: -$OPTARG" >&2
      echo -e $help
      exit 1 # invalid option
      ;;
  esac
done
shift $((OPTIND - 1))

# The wmt module copied from the build on solaria.
module=$HOME/war

# If the module isn't present, issue a message and exit.
if [ ! -d $module ]; then
  echo "The wmt module cannot be found."
  exit 2 # module not present
fi

# Remove the testing directories from the wmt module.
rm -rf $module/data
rm -rf $module/edu.colorado.csdms.wmt.WMT.JUnit
rm -rf $module/save

# Is this the public, stable, dakota or testing version?
if [[ $testing = "true" ]]; then
  load_path="wmt-testing"   
elif [[ $analyst = "true" ]]; then
  load_path="wmt-analyst"
elif [[ $dakota = "true" ]]; then
  load_path="wmt-dakota"
elif [[ $topoflow = "true" ]]; then
  load_path="wmt-topoflow"
elif [[ $permafrost = "true" ]]; then
  load_path="wmt-permafrost"
elif [[ $staging = "true" ]]; then
  load_path="wmt-staging"
else
  load_path="wmt-testing"
fi

# For backward compatibility, create "WMT.html" and place in the module's 
# root directory.
echo "<head>
<meta HTTP-EQUIV=\"REFRESH\"
   content=\"0; url=https://csdms.colorado.edu/$load_path\">
</head>" > $module/WMT.html

# The target location.
target=/data/web/htdocs/csdms

# Action!
sudo -E rm -rf $target/$load_path
sudo -E cp -R $module $target/$load_path

echo "Loaded wmt to $target/$load_path"
exit 0
